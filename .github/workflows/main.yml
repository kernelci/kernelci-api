# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the
  # main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:

      - name: Check out source code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python packages
        working-directory: docker/api
        run: |
          python --version
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Export environment variables
        run: |
          echo "SECRET_KEY=b6451545d2e4635148d768f07877aade3ad8e7e160d52962badd7587a4b9a150" > .env
          echo "SMTP_HOST=smtp.gmail.com" >> .env
          echo "SMTP_PORT=465" >> .env
          echo "EMAIL_SENDER=test@kernelci.org" >> .env
          echo "EMAIL_PASSWORD=random" >> .env

      - name: Install necessary packages
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y docker-compose docker.io

      - name: Build docker images
        run: docker-compose -f test-docker-compose.yaml build --no-cache

      - name: Run pycodestyle
        run: |
          pycodestyle api/*.py

      - name: Run API containers
        run: |
          docker-compose -f test-docker-compose.yaml up -d test

      - name: Run pylint
        run: |
          docker-compose -f test-docker-compose.yaml exec -T test pylint api.auth
          docker-compose -f test-docker-compose.yaml exec -T test pylint api.db
          docker-compose -f test-docker-compose.yaml exec -T test pylint api.main
          docker-compose -f test-docker-compose.yaml exec -T test pylint api.models
          docker-compose -f test-docker-compose.yaml exec -T test pylint api.pubsub
          docker-compose -f test-docker-compose.yaml exec -T test pylint api.user_manager
          docker-compose -f test-docker-compose.yaml exec -T test pylint tests/unit_tests
          docker-compose -f test-docker-compose.yaml exec -T test pylint tests/e2e_tests

      - name: Stop docker containers
        if: always()
        run: |
          docker-compose -f test-docker-compose.yaml down

  lint:
    runs-on: ubuntu-22.04
    name: Lint

    steps:
      - name: Check out source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 32  # This is necessary to get the commits

      - name: Get changed python files between base and head
        run: >
          echo "CHANGED_FILES=$(echo $(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} -- | grep \.py$))" >> $GITHUB_ENV

      - if: env.CHANGED_FILES
        name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: "3.10"

      - if: env.CHANGED_FILES
        name: Install Python packages
        run: |
          pip install -r docker/api/requirements-tests.txt

      - if: env.CHANGED_FILES
        uses: marian-code/python-lint-annotate@v3
        with:
          python-root-list: ${{ env.CHANGED_FILES }}
          use-black: false
          use-flake8: false
          use-isort: false
          use-mypy: false
          use-pycodestyle: true
          use-pydocstyle: false
          use-vulture: false
          python-version: "3.10"
