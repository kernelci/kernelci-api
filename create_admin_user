#!/usr/bin/env python3
#
# SPDX-License-Identifier: LGPL-2.1-or-later
#
# Copyright (C) 2022 Collabora Limited
# Author: Jeny Sadadia <jeny.sadadia@collabora.com>
# Author: Michal Galka <michal.galka@collabora.com>

"""Command line utility for creating an admin user"""

import argparse
import getpass
import json
import re
import requests
import subprocess
import sys
import urllib


DEFAULT_URL = 'http://localhost:8001/latest/'


def get_hashed_password(password, url):
    """Method to get hashed password"""
    url = urllib.parse.urljoin(url, 'hash')
    data = {'password': password}
    res = requests.post(url, data=json.dumps(data))
    return res.json()


def create_admin(username, hashed_password):
    """
    Create an admin user
    """
    cmd = f"docker-compose exec db /bin/mongo kernelci --eval \
\"db.user.insert({{username: '{username}', \
hashed_password: '{re.escape(hashed_password)}', \
active: true, is_admin: 1}})\""
    ret_code = subprocess.call(cmd, shell=True)
    return ret_code == 0

def main(args):
    password = getpass.getpass()
    hashed_password = get_hashed_password(password, args.url)
    return create_admin(args.username, hashed_password)


if __name__ == "__main__":
    parser = argparse.ArgumentParser("KernelCI API Admin")
    parser.add_argument('username', help="User name")
    parser.add_argument('--url', default=DEFAULT_URL, help="API host URL")
    args = parser.parse_args()
    sys.exit(0 if main(args) else 1)
